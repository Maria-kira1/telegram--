import telebot
from telebot import types
import os

# ====== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ======
TOKEN = os.environ.get("TELEGRAM_TOKEN")
if not TOKEN:
    print("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_TOKEN –Ω–µ –∑–∞–¥–∞–Ω!")
    exit(1)

bot = telebot.TeleBot(TOKEN)

# ====== –¢–∞—Ä–∏—Ñ—ã ======
tariffs = {
    "–ë–∞–∑–æ–≤—ã–π": "üí° –ë–∞–∑–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ ‚Äî 4800 —Ä—É–±/–º–µ—Å.\n2 –∑–∞–Ω—è—Ç–∏—è –≤ –Ω–µ–¥–µ–ª—é, –¥–æ—Å—Ç—É–ø –∫ –∑–∞–ø–∏—Å—è–º, –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∑.",
    "–°—Ç–∞–Ω–¥–∞—Ä—Ç": "üìò –°—Ç–∞–Ω–¥–∞—Ä—Ç ‚Äî 6800 —Ä—É–±/–º–µ—Å.\n+ –ß–∞—Ç –¥–ª—è —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.",
    "–ü—Ä–µ–º–∏—É–º": "üåü –ü—Ä–µ–º–∏—É–º ‚Äî 9500 —Ä—É–±/–º–µ—Å.\n+ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –∏ –∞—É–¥–∏–æ–ø—Ä–∞–∫—Ç–∏–∫–∞.",
    "–ò–Ω—Ç–µ–Ω—Å–∏–≤": "üî• –ò–Ω—Ç–µ–Ω—Å–∏–≤ ‚Äî 12000 —Ä—É–±/–º–µ—Å.\n3 –∑–∞–Ω—è—Ç–∏—è –≤ –Ω–µ–¥–µ–ª—é + —É—Å–∫–æ—Ä–µ–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞.",
    "–ú–∏–Ω–∏-–≥—Ä—É–ø–ø–∞": "üë• –ú–∏–Ω–∏-–≥—Ä—É–ø–ø–∞ ‚Äî 7200 —Ä—É–±/–º–µ—Å.\n–î–æ 5 —á–µ–ª–æ–≤–µ–∫, –∂–∏–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è –∏ –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å.",
    "–û–Ω–ª–∞–π–Ω": "üíª –û–Ω–ª–∞–π–Ω ‚Äî 4800 —Ä—É–±/–º–µ—Å.\n–ó–∞–Ω—è—Ç–∏—è –≤ Zoom + –¥–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ.",
    "–û—Ñ—Ñ–ª–∞–π–Ω": "üè´ –û—Ñ—Ñ–ª–∞–π–Ω ‚Äî 7500 —Ä—É–±/–º–µ—Å.\n–û—á–Ω—ã–µ —É—Ä–æ–∫–∏ –≤ —à–∫–æ–ª–µ, –≤—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –≤–∫–ª—é—á–µ–Ω—ã.",
    "–ü—Ä–æ–±–Ω—ã–π": "üéÅ –ü—Ä–æ–±–Ω—ã–π ‚Äî 0 —Ä—É–±.\n–ü–µ—Ä–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ, —á—Ç–æ–±—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ñ–æ—Ä–º–∞—Ç–æ–º.",
    "–ì—Ä—É–ø–ø–æ–≤–æ–π": "üë®‚Äçüè´ –ì—Ä—É–ø–ø–æ–≤–æ–π ‚Äî 5800 —Ä—É–±/–º–µ—Å.\n10 —á–µ–ª–æ–≤–µ–∫, –≥—Ä—É–ø–ø–æ–≤–∞—è –¥–∏–Ω–∞–º–∏–∫–∞, –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å.",
    "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π": "üë§ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π ‚Äî 14000 —Ä—É–±/–º–µ—Å.\n–ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–¥ –í–∞—à —É—Ä–æ–≤–µ–Ω—å –∏ –≥—Ä–∞—Ñ–∏–∫.",
    "–†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π": "üó£ –†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π ‚Äî 5200 —Ä—É–±/–º–µ—Å.\n–§–æ–∫—É—Å –Ω–∞ –∂–∏–≤—É—é —Ä–µ—á—å –∏ –∞—É–¥–∏—Ä–æ–≤–∞–Ω–∏–µ.",
    "–î–µ—Ç—Å–∫–∏–π": "üßí –î–µ—Ç—Å–∫–∏–π ‚Äî 4500 —Ä—É–±/–º–µ—Å.\n–ò–≥—Ä–æ–≤–∞—è —Ñ–æ—Ä–º–∞, –ø—Ä–æ—Å—Ç–∞—è –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞ –∏ —Å–ª–æ–≤–∞.",
    "–ö—É—Ä–∞—Ç–æ—Ä—Å–∫–∏–π": "üìö –ö—É—Ä–∞—Ç–æ—Ä—Å–∫–∏–π ‚Äî 8800 —Ä—É–±/–º–µ—Å.\n–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å."
}

# ====== –ö–æ–º–∞–Ω–¥–∞ /start ======
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üìñ –¢–∞—Ä–∏—Ñ—ã")
    btn2 = types.KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
    btn3 = types.KeyboardButton("üè´ –û —à–∫–æ–ª–µ")
    markup.add(btn1, btn2, btn3)
    bot.send_message(
        message.chat.id,
        "üå∏ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —à–∫–æ–ª—É –∞—Ä–∞–±—Å–∫–æ–≥–æ —è–∑—ã–∫–∞, –ú–∞—Ä–∏–∏!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=markup
    )

# ====== –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ ======
@bot.message_handler(func=lambda message: True)
def handle_text(message):
    text = message.text.lower()

    if "—Ç–∞—Ä–∏—Ñ" in text or message.text == "üìñ –¢–∞—Ä–∏—Ñ—ã":
        markup = types.InlineKeyboardMarkup()
        for name in tariffs:
            markup.add(types.InlineKeyboardButton(name, callback_data=name))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ üëá", reply_markup=markup)

    elif "–∫–æ–Ω—Ç–∞–∫—Ç" in text or message.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã":
        bot.send_message(
            message.chat.id,
            "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏:\nTelegram: @arabic_school\nEmail: info@arabic-school.ru"
        )

    elif "–æ —à–∫–æ–ª–µ" in text or message.text == "üè´ –û —à–∫–æ–ª–µ":
        bot.send_message(
            message.chat.id,
            "üè´ –ù–∞—à–∞ —à–∫–æ–ª–∞ –æ–±—É—á–∞–µ—Ç –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–æ–º—É –∞—Ä–∞–±—Å–∫–æ–º—É —è–∑—ã–∫—É —Å –Ω—É–ª—è.\n"
            "‚Äî –£—Ä–æ–∫–∏ 2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é\n‚Äî –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π\n‚Äî –ö—É—Ä–∞—Ç–æ—Ä—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n"
            "‚Äî –†–∞–∑–≥–æ–≤–æ—Ä–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –≤ Telegram"
        )

    else:
        bot.send_message(
            message.chat.id,
            "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –ø–æ–∫–∞ –ø–æ–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—ã: —Ç–∞—Ä–∏—Ñ—ã, –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏–ª–∏ –æ —à–∫–æ–ª–µ üòä"
        )

# ====== –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ —Ç–∞—Ä–∏—Ñ–æ–≤ ======
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    tariff = call.data
    if tariff in tariffs:
        bot.send_message(call.message.chat.id, tariffs[tariff])
    else:
        bot.send_message(call.message.chat.id, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ.")

# ====== –ó–∞–ø—É—Å–∫ ======
print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
bot.infinity_polling()
